# ==============================================================================
# metafile.yaml — Exemplo completo do formato suportado pelo Newpkg
# Local padrão: /usr/ports/<categoria>/<pacote>/metafile.yaml
# ==============================================================================

# 🏷️ Nome e versão do pacote
name: example              # Nome do pacote
version: 1.0.0             # Versão atual
release: 1                 # Incrementa a cada rebuild
epoch: 0                   # Número de epoch (caso precise forçar upgrade)

# 📦 Categoria e descrição
category: utils            # Categoria no /usr/ports
summary: "Exemplo completo de pacote para o Newpkg"
description: |
  Este é um pacote de exemplo que demonstra todas as opções
  suportadas no formato de metafile.yaml do Newpkg. Ele cobre
  fases de build, patch, hooks, dependências e estágios especiais.

# 🧩 Estágio de construção
#   - normal → instala em /
#   - pass1  → instala em /mnt/lfs com usuário lfs
#   - pass2  → instala em /mnt/lfs após toolchain inicial
stage: normal

# ⚙️ Ambiente do build
environment:
  CC: gcc
  CXX: g++
  CFLAGS: "-O2 -pipe"
  CXXFLAGS: "-O2 -pipe"
  LDFLAGS: "-Wl,-O1,--as-needed"
  PKG_CONFIG_PATH: "/usr/lib/pkgconfig:/usr/share/pkgconfig"
  PATH: "/usr/bin:/bin:/usr/sbin:/sbin"
  LANG: "en_US.UTF-8"
  MAKEFLAGS: "-j$(nproc)"

# 🌐 Fontes (pode listar múltiplos mirrors)
source:
  - https://ftp.gnu.org/gnu/hello/hello-2.12.tar.gz
  - https://mirror.example.org/hello-2.12.tar.gz

# 🧾 Sums de integridade (opcional, pode ser sha256/sha512/md5)
checksums:
  sha256: 31e7b1e1ef00e784bc1bafbb3f61e62c7cde4a4e3de8cfb1db4e97a1ef3a49e7

# 📦 Nome da pasta gerada após extração (opcional)
build_dir: hello-2.12

# 📜 Patches aplicados automaticamente (ordem importa)
patches:
  - fix-locale.patch
  - disable-tests.patch

# ⚒️ Comandos de build (customizados)
# Se não forem definidos, o core.sh tentará usar "./configure && make"
build:
  - ./configure --prefix=/usr --sysconfdir=/etc
  - make

# 📥 Comandos de instalação
# Se não definidos, o core.sh usa "make DESTDIR=\$DESTDIR install"
install:
  - make DESTDIR=$DESTDIR install
  - install -v -m755 hello /usr/bin/hello

# 📂 Arquivo de configuração (gerado antes do build, se necessário)
# Pode ser usado para criar arquivos temporários de build.
config_files:
  - path: config.mk
    content: |
      PREFIX = /usr
      CFLAGS = -O2 -pipe

# 🧷 Dependências
# São resolvidas automaticamente pelo módulo deps.py
depends:
  build:
    - gcc
    - make
    - coreutils
  runtime:
    - glibc
    - bash

# 🧩 Dependências opcionais
optional_depends:
  - texinfo
  - man-db

# 🧰 Ferramentas exigidas apenas em bootstrap (pass1/pass2)
bootstrap_tools:
  - binutils
  - gcc
  - bash

# ⚙️ Arquivos de hooks específicos deste pacote (executados se existirem)
# Estes scripts devem estar dentro de /usr/ports/<pkg>/scripts/
hooks:
  pre_download:   scripts/pre-download.sh
  post_download:  scripts/post-download.sh
  pre_build:      scripts/pre-build.sh
  post_build:     scripts/post-build.sh
  pre_install:    scripts/pre-install.sh
  post_install:   scripts/post-install.sh
  pre_remove:     scripts/pre-remove.sh
  post_remove:    scripts/post-remove.sh

# 🔁 Testes pós-build (executados se existir target "check" no Makefile)
test:
  - make check || true

# 🧹 Limpeza extra após instalação (executada no DESTDIR)
cleanup:
  - rm -rf $DESTDIR/usr/share/doc/hello

# 🧩 Usuário/grupo a ser criado durante a instalação
users:
  - name: example
    uid: 3001
    gid: 3001
    home: /var/lib/example
    shell: /sbin/nologin

groups:
  - name: example
    gid: 3001

# 📦 Arquivos de pós-instalação (executados fora do chroot)
post_install_actions:
  - update-desktop-database || true
  - ldconfig || true

# 🗂️ Diretórios para preservar em upgrade/removal
preserve_paths:
  - /etc/example.conf
  - /var/lib/example/

# 🔒 Políticas de segurança específicas do pacote
security:
  sandbox: true          # Executa em ambiente isolado
  restricted_network: true
  drop_privileges: true
  forbid_root_build: false

# 🧱 Testes adicionais de integridade
integrity:
  check_symlinks: true
  check_permissions: true
  fix_on_error: true

# 📦 Empacotamento
package:
  format: tar.zst        # Formato final (tar.zst, tar.xz, etc.)
  compression_level: 19
  include_docs: true
  include_manpages: true
  include_locales: false
  output_dir: /var/cache/newpkg/packages

# 🧾 Informações extras
metadata:
  maintainer: "Fernando Canata <fernando@example.org>"
  license: GPL-3.0-or-later
  homepage: https://www.gnu.org/software/hello/
  repository: https://github.com/fernando/newpkg-ports
  bugtracker: https://github.com/fernando/newpkg-ports/issues
